-- Reference tables for the new student schema
-- Run these SQL commands in your Supabase SQL editor

-- Level table (1ère, 2ème, 3ème, Bac)
CREATE TABLE IF NOT EXISTS public."Level" (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL UNIQUE,
  description text,
  created_at timestamptz DEFAULT now()
);

-- Classe table (specific classes within each level)
CREATE TABLE IF NOT EXISTS public."Classe" (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  level_id bigint NOT NULL REFERENCES public."Level"(id) ON DELETE RESTRICT,
  description text,
  created_at timestamptz DEFAULT now(),
  UNIQUE(name, level_id)
);

-- Branch table (informatique, sciences, tech, math, eco, lettre)
CREATE TABLE IF NOT EXISTS public."Branch" (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL UNIQUE,
  description text,
  created_at timestamptz DEFAULT now()
);

-- Insert default data
INSERT INTO public."Level" (name, description) VALUES
  ('1ère', 'Première année'),
  ('2ème', 'Deuxième année'),
  ('3ème', 'Troisième année'),
  ('Bac', 'Baccalauréat')
ON CONFLICT (name) DO NOTHING;

INSERT INTO public."Classe" (name, level_id) VALUES
  ('A', 1), ('B', 1), ('C', 1),  -- 1ère classes
  ('A', 2), ('B', 2), ('C', 2),  -- 2ème classes
  ('A', 3), ('B', 3), ('C', 3),  -- 3ème classes
  ('A', 4), ('B', 4), ('C', 4)   -- Bac classes
ON CONFLICT (name, level_id) DO NOTHING;

INSERT INTO public."Branch" (name, description) VALUES
  ('informatique', 'Informatique et programmation'),
  ('sciences', 'Sciences naturelles'),
  ('tech', 'Technologie'),
  ('math', 'Mathématiques'),
  ('eco', 'Économie'),
  ('lettre', 'Lettres et langues')
ON CONFLICT (name) DO NOTHING;

-- Add indexes for better performance
CREATE INDEX IF NOT EXISTS idx_classe_level_id ON public."Classe"(level_id);
CREATE INDEX IF NOT EXISTS idx_student_level_id ON public.student(level_id);
CREATE INDEX IF NOT EXISTS idx_student_classe_id ON public.student(classe_id);
CREATE INDEX IF NOT EXISTS idx_student_branch_id ON public.student(branch_id);
